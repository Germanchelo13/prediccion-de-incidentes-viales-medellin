geojson=mapa_medellin,
locations=mapa_medellin$geometry,
z=mapa_medellin$ACCIDENTES,
colorscale="Viridis"
# ,
# featureidkey="geometry"
)
fig <- fig %>% colorbar(title = "Bergeron Votes")
fig <- fig %>% layout(
mapbox=list(
style="carto-positron",
zoom =9,
center=list(lon=-75.590553, lat=6.230883))
)
fig
mapa_medellin$geometry
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choroplethmapbox",
# geojson=mapa_medellin,
locations=mapa_medellin$geometry,
# z=mapa_medellin$ACCIDENTES,
colorscale="Viridis"
# ,
# featureidkey="geometry"
)
fig <- fig %>% colorbar(title = "Bergeron Votes")
fig <- fig %>% layout(
mapbox=list(
style="carto-positron",
zoom =9,
center=list(lon=-75.590553, lat=6.230883))
)
fig
fig <- plot_ly()
fig <- fig %>% add_trace(
type="choroplethmapbox",
# geojson=mapa_medellin,
locations=mapa_medellin$geometry,
# z=mapa_medellin$ACCIDENTES,
colorscale="Viridis"
# ,
# featureidkey="geometry"
)
# fig <- fig %>% colorbar(title = "Bergeron Votes")
# fig <- fig %>% layout(
#   mapbox=list(
#     style="carto-positron",
#     zoom =9,
#     center=list(lon=-75.590553, lat=6.230883))
# )
fig
?plot_mapbox
plot_mapbox(mapa_medellin)
runApp()
runApp()
?plotly()
fig <- plotly(mapa_medellin, split=mapa_medellin$MUERTES__2)
fig <- plotly(mapa_medellin, split=mapa_medellin$MUERTES__2)
fig <- plotly(mapa_medellin, split=MUERTES__2)
fig <- plotly(mapa_medellin, split=~CLUSTER)
runApp()
fig <- plotly(mapa_medellin, color=~SHAPEAREA)
fig <- plot_ly(mapa_medellin, color=~SHAPEAREA)
fig
fig <- plot_ly(mapa_medellin, color=~CLUSTER)
fig
fig <- plot_ly(mapa_medellin, color=~CLUSTER,alpha = 1)
fig
fig <- plot_ly(mapa_medellin, color=~CLUSTER ,showlegend = FALSE,alpha = 1)
fig
plot_geo(mapa_medellin)
plot_geo(mapa_medellin,color=~CLUSTER)
plot_geo(mapa_medellin,fillcolor=~CLUSTER)
names(mapa_medellin)
runApp()
fig <- plot_ly(mapa_medellin, color=~ACCIDENTES ,showlegend = FALSE,alpha = 1)
fig
fig <- plot_ly(mapa_medellin, line.color=~ACCIDENTES ,showlegend = FALSE,alpha = 1)
fig
fig <- plot_ly(mapa_medellin, line.color=~CLUSTER ,showlegend = FALSE,alpha = 1)
fig
mapboxToken <- paste(readLines("../.mapbox_token"), collapse="")    # You need your own token
Sys.setenv("MAPBOX_TOKEN" = mapboxToken) # for Orca
fig <- ggplotly(
ggplot(nc) +
geom_sf(aes(fill = "CLUSTER"))
)
fig <- ggplotly(
ggplot(mapa_medellin) +
geom_sf(aes(fill = "CLUSTER"))
)
fig
fig <- ggplotly(
ggplot(mapa_medellin) +
geom_sf(aes(fill = get("CLUSTER") ))
)
fig
runApp()
element_text(colour="blue", size=10,
face="bold")
runApp()
T | T
T | F
runApp()
url_github<-"https://github.com/Germanchelo13/prediccion-de-incidentes-viales-medellin.git"
url <- 'https://raw.githubusercontent.com/plotly/datasets/master/election.geojson'
geojson <- rjson::fromJSON(file=url)
mapa_medellin<-st_read('barrios_cluster.shp')
prediccion<-read.csv("datos_pronostico_2021_2022.csv")
prediccion$FECHA_ACCIDENTE_ <-(as.POSIXct(prediccion$FECHA_ACCIDENTE, format="%Y-%m-%d", tz="UTC"))
names(mapa_medellin)<-c("BARRIO","AREA","Perimetro","ACCIDENTES 2017",
"ACCIDENTES 2018","ACCIDENTES 2019",
"MUERTES 2017","MUERTES 2018","MUERTES 2019",
"GRUPOS"
)
runApp()
url_github<-"https://github.com/Germanchelo13/prediccion-de-incidentes-viales-medellin.git"
url <- 'https://raw.githubusercontent.com/plotly/datasets/master/election.geojson'
geojson <- rjson::fromJSON(file=url)
mapa_medellin<-st_read('barrios_cluster.shp')
library(sf) # manupulaciÃ³n geolocalizaciones
mapa_medellin<-st_read('barrios_cluster.shp')
mapa_medellin
names(mapa_medellin)
shiny::runApp()
# url <- 'https://raw.githubusercontent.com/plotly/datasets/master/election.geojson'
# geojson <- rjson::fromJSON(file=url)
mapa_medellin<-st_read('barrios_cluster.shp')
names(mapa_medellin)<-c('NOMBRE', 'SHAPEAREA', 'SHAPELEN', 'geometry',
'ACCIDENTES_1000KM2_2015', 'ACCIDENTES_1000KM2_2016',
'ACCIDENTES_1000KM2_2017', 'ACCIDENTES_1000KM2_2018',
'ACCIDENTES_1000KM2_2019', 'MUERTES_2015', 'MUERTES_2016',
'MUERTES_2017', 'MUERTES_2018', 'MUERTES_2019', 'CLUSTER'
)
runApp()
names(mapa_medellin)
mapa_medellin
mapa_medellin
mapa_medellin
# url <- 'https://raw.githubusercontent.com/plotly/datasets/master/election.geojson'
# geojson <- rjson::fromJSON(file=url)
mapa_medellin<-st_read('barrios_cluster.shp')
names(mapa_medellin)
runApp()
# url <- 'https://raw.githubusercontent.com/plotly/datasets/master/election.geojson'
# geojson <- rjson::fromJSON(file=url)
mapa_medellin<-st_read('barrios_cluster.shp')
prediccion<-read.csv("datos_pronostico_2021_2022.csv")
prediccion$FECHA_ACCIDENTE_ <-(as.POSIXct(prediccion$FECHA_ACCIDENTE, format="%Y-%m-%d", tz="UTC"))
var_clusters<-c('ACCIDENTES_1000KM2_2015', 'ACCIDENTES_1000KM2_2016',
'ACCIDENTES_1000KM2_2017', 'ACCIDENTES_1000KM2_2018',
'ACCIDENTES_1000KM2_2019', 'MUERTES_2015', 'MUERTES_2016',
'MUERTES_2017', 'MUERTES_2018', 'MUERTES_2019')
names(mapa_medellin)<-c('NOMBRE', 'SHAPEAREA', 'SHAPELEN',
'ACCIDENTES_1000KM2_2015', 'ACCIDENTES_1000KM2_2016',
'ACCIDENTES_1000KM2_2017', 'ACCIDENTES_1000KM2_2018',
'ACCIDENTES_1000KM2_2019', 'MUERTES_2015', 'MUERTES_2016',
'MUERTES_2017', 'MUERTES_2018', 'MUERTES_2019', 'CLUSTER','geometry'
)
mapa_medellin$descripcion<-paste(
"Barrio: ", mapa_medellin$NOMBRE,
"<br> Accidentes por 1000 km2: ",
"<br> 2015: ",mapa_medellin$ACCIDENTES_1000KM2_2015,
"<br> 2016:", mapa_medellin$ACCIDENTES_1000KM2_2016,
"<br> 2017:", mapa_medellin$ACCIDENTES_1000KM2_2017,
"<br> 2018:", mapa_medellin$ACCIDENTES_1000KM2_2018,
"<br> 2019:", mapa_medellin$ACCIDENTES_1000KM2_2019,
"<br> Muertes: ",
"<br> 2015: ",mapa_medellin$MUERTES_2015,
"<br> 2016:", mapa_medellin$MUERTES_2016,
"<br> 2017:", mapa_medellin$MUERTES_2017,
"<br> 2018:", mapa_medellin$MUERTES_2018,
"<br> 2019:", mapa_medellin$MUERTES_2019,
)
mapa_medellin$descripcion<-paste(
"Barrio: ", mapa_medellin$NOMBRE,
"<br> Accidentes por 1000 km2: ",
"<br> 2015: ",mapa_medellin$ACCIDENTES_1000KM2_2015,
"<br> 2016:", mapa_medellin$ACCIDENTES_1000KM2_2016,
"<br> 2017:", mapa_medellin$ACCIDENTES_1000KM2_2017,
"<br> 2018:", mapa_medellin$ACCIDENTES_1000KM2_2018,
"<br> 2019:", mapa_medellin$ACCIDENTES_1000KM2_2019,
"<br> Muertes: ",
"<br> 2015: ",mapa_medellin$MUERTES_2015,
"<br> 2016:", mapa_medellin$MUERTES_2016,
"<br> 2017:", mapa_medellin$MUERTES_2017,
"<br> 2018:", mapa_medellin$MUERTES_2018,
"<br> 2019:", mapa_medellin$MUERTES_2019,
sep=""
)
runApp()
runApp()
colorRampPalette(brewer.pal(10,"Spectral"))(41))
colorRampPalette(brewer.pal(10,"Spectral"))(41)
runApp()
# library(tmap)  # graficos interactivos de mapas
library(leaflet)
runApp()
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leafletMap(mapa_medellin)
?leafletMap()
?leaflet()
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leaflet(mapa_medellin)
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leaflet(mapa_medellin)
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leaflet(mapa_medellin)%>% addTiles()
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leaflet(mapa_medellin)%>% addTiles() %>% addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
?addPolygons
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leaflet(mapa_medellin)%>% addTiles() %>%
addPolygons(group =CLUSTER)
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leaflet(mapa_medellin)%>% addTiles() %>%
addPolygons(group =~CLUSTER)
?addPolygons
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
leaflet(mapa_medellin)%>% addTiles() %>%
addPolygons(color =~CLUSTER)
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     # theme(legend.title = input$estado)+
#     labs(fill=input$estado),text=~descripcion
#
# )
# fig<-plot_mapbox(mapa_medellin_temp, split=~CLUSTER)
pal <- colorFactor(
palette = 'Dark2',
domain = mapa_medellin$CLUSTER
)
leaflet(mapa_medellin)%>% addTiles() %>%
addPolygons(color =~pal)
leaflet(mapa_medellin)%>% addTiles() %>%
addPolygons(fillColor =  =~CLUSTER)
leaflet(mapa_medellin)%>% addTiles() %>%
addPolygons(fillColor  =~CLUSTER)
runApp()
?labs
?geom_sf
runApp()
?style()
runApp()
?add_trace()
runApp()
fig<- plot_geo()%>%
add_trace(data=mapa_medellin,
z = ~CLUSTER, text = mapa_medellin$descripcion#, span = I(0),
# locations = state.abb, locationmode = 'USA-states'
)
fig
fig<- plot_geo()%>%
add_trace(data=mapa_medellin,
z = ~CLUSTER, text = mapa_medellin$descripcion,#, span = I(0),
# locations = ,
locationmode = 'geometry'
)
# )
# leaflet(mapa_medellin)%>% addTiles() %>%
#   addPolygons(fillColor  =~CLUSTER)
# ?leaflet()
# leaflet(data = mapa_medellin_temp) # %>%
#   # addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
# # fig<-plotly::plot_geo(mapa_medellin_temp,z=~ACCIDENTES_1000KM2_2015,color=~ACCIDENTES_1000KM2_2015)
# #   # add_trace(
# #   #   data = mapa_medellin_temp,locations=mapa_medellin_temp$geometry,  text = ~descripcion
# #   # )
fig
fig<- plot_geo()%>%
add_trace(data=mapa_medellin,
text = mapa_medellin$descripcion,#, span = I(0),
# locations = ,
locationmode = 'geometry'
)
fig
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
p <- ggplot(mapa_medellin) + geom_sf(aes(fill = CLUSTER))
ggplotly(p) %>%
highlight(
"plotly_hover",
selected = attrs_selected(line = list(color = "black"))
) %>%
widgetframe::frameWidget()
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
p <- ggplot(mapa_medellin) + geom_sf(aes(fill = ACCIDENTES_1000KM2_2015))
ggplotly(p) %>%
highlight(
"plotly_hover",
selected = attrs_selected(line = list(color = "black"))
) %>%
widgetframe::frameWidget()
?highlight
ggplotly(p) %>%
highlight(
# "plotly_hover",
selected = attrs_selected(line = list(color = "black"))
) %>%
widgetframe::frameWidget()
ggplotly(p) %>%
highlight(
hover=descripcion,
# "plotly_hover",
selected = attrs_selected(line = list(color = "black"))
) %>%
widgetframe::frameWidget()
ggplotly(p) %>%
highlight(
hover=mapa_medellin$descripcion,
# "plotly_hover",
selected = attrs_selected(line = list(color = "black"))
) %>%
widgetframe::frameWidget()
ggplotly(p) %>%
highlight(
hoverinfo=mapa_medellin$descripcion,
# "plotly_hover",
selected = attrs_selected(line = list(color = "black"))
) %>%
widgetframe::frameWidget()
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
p <- ggplot(mapa_medellin) + geom_sf(aes(fill = ACCIDENTES_1000KM2_2015))
ggplotly(p) %>%
highlight(
hoverinfo=mapa_medellin$CLUSTER,
# "plotly_hover",
selected = attrs_selected(line = list(color = "black"))
) %>%
widgetframe::frameWidget()
library(rbokeh)
install.packages("rbokeh")
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
?rbokeh::ly_map()
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
rbokeh::ly_map(mapa_medellin)
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
plot <- suppressWarnings(figure(width = 800, height = 450, padding_factor = 0) %>%
rbokeh::ly_map(mapa_medellin)
p <- ggplot(mapa_medellin) + geom_sf(aes(fill = ACCIDENTES_1000KM2_2015))
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
plot <- figure(width = 800, height = 450, padding_factor = 0) %>%
rbokeh::ly_map(mapa_medellin)
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
plot <- rbokeh::figure(width = 800, height = 450, padding_factor = 0) %>%
rbokeh::ly_map(mapa_medellin)
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
plot <- rbokeh::figure(width = 800, height = 450, padding_factor = 0) %>%
rbokeh::ly_map(mapa_medellin) %>%
rbokeh::ly_polygons()
# fig <- ggplotly(
#   ggplot(mapa_medellin_temp) +
#     geom_sf(aes(fill = get(input$estado) ))+
#     labs(fill=input$estado))
# fig<-fig %>%
#   add_trace()
plot <- rbokeh::figure(width = 800, height = 450, padding_factor = 0) %>%
rbokeh::ly_polygons(mapa_medellin)
mapa_medellin$geometry[1]
mapa_medellin$geometry$lat
mapa_medellin$geometry
mapa_medellin$geometry$X
mapa_medellin$geometry
library(mapview)
install.packages("mapview")
mapview(mapa_medellin, legend = FALSE)
library(mapview)
mapview(mapa_medellin, legend = FALSE)
mapview(mapa_medellin)
?mapview
mapview(mapa_medellin)
mapview(mapa_medellin,fillcolor=CLUSTER)
mapview(mapa_medellin,fillcolor=mapa_medellin$CLUSTER)
mapview(mapa_medellin,fill=mapa_medellin$CLUSTER)
mapview(mapa_medellin,color=mapa_medellin$CLUSTER)
mapview(mapa_medellin,fillcolor=mapa_medellin$CLUSTER)
mapview(mapa_medellin,zcol=mapa_medellin$CLUSTER)
mapview(mapa_medellin,zcol="CLUSTER")
?mapview
mapview(mapa_medellin,zcol="CLUSTER",hoverinfo="descripcion")
mapview(mapa_medellin,zcol="CLUSTER",hover="descripcion")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mapa_medellin$CLUSTER
mapview(mapa_medellin[mapa_medellin$CLUSTER=="Grado moderado"] ,zcol="CLUSTER")@map
mapview(mapa_medellin[mapa_medellin$CLUSTER=="Grado moderado",] ,zcol="CLUSTER")@map
names(mapa_medellin)
mapview(mapa_medellin[mapa_medellin$CLUSTER=="Grado moderado",] ,zcol="MUERTES_2016")@map
runApp()
runApp()
?mapview()
runApp()
shiny::runApp()
runApp()
